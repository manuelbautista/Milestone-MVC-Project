@model DCS.Common.Models.ProjectModel

@{
    if (Model.ID > 0)
    {
        ViewBag.Title = "Edit Project";
    }
    else
    {
        ViewBag.Title = "Create Project";
    }
}
<script src='@Url.Content("~/Content/ckeditor/ckeditor.js")'></script>
<script src='@Url.Content("~/Content/ckeditor/adapters/jquery.js")'></script>


@using (Html.BeginForm("edit", "project", FormMethod.Post, new { id = "frmEditProject" }))
{
    <div class="row">
        <div class="col-lg-12 col-md-12">
        <div class="editprojectlist clstopmargin">
        <div class="panel panel-default">
            <div class="panel-heading pnlwithrightbutton">
                @if (Model.ID > 0)
                {
                    <span class="spnpnlheading">
                        Edit Project
                    </span>
                }
                else
                {
                    <span class="spnpnlheading">
                        Create Project
                    </span>
                    if (ViewData["message"] != null)
                    {
                        <span style="margin-left:5%;color:red;font-weight:bold;">@ViewData["message"]</span>
                    }
                }
                <a class="btn btn-primary pull-right" href="@Url.Action("index","project")">Back</a>
            </div>
            <div class="panel-body nopadding">
                <div class="col-lg-12 col-md-12" style="margin-top:15px;">
                    <div class="col-lg-2 col-md-2 form-group">
                        Project No:
                        @if (Model.ID > 0)
                        {
                            <label>@Model.ProjectNumber</label>
                            @Html.HiddenFor(x => x.ProjectNumber)
                        }
                        else
                        {
                            @*<text>#</text>*@
                            @Html.TextBoxFor(m => m.ProjectNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.ProjectNumber)
                        }
                    </div>
                    <div class="col-lg-4 col-md-4 form-group">
                        ETO Playbook?

                        @if (Model.ID > 0)
                        {
                            @Html.DropDownList("EOPlaybook", new SelectListItem[] { new SelectListItem() { Text = "Yes", Value = "true",Selected=Model.EOPlaybook.HasValue? Model.EOPlaybook.Value : false }, new SelectListItem()
{ Text = "No", Value = "false",Selected=Model.EOPlaybook.HasValue? Model.EOPlaybook.Value : false} }, "-Select-", new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownList("EOPlaybook", new SelectListItem[] { new SelectListItem() { Text = "Yes", Value = "true" }, new SelectListItem()
{ Text = "No", Value = "false"} }, "-Select-", new { @class = "form-control" })
                        }

                    </div>
                    <div class="col-lg-3 col-md-3 form-group">
                        Management Approval:
                        @if (Model.ID > 0)
                        {
                            @Html.EditorFor(model => model.ManagementApproval)
                        }
                        else
                        {
                            @Html.DropDownList("ManagementApproval", new SelectListItem[] { new SelectListItem() { Text = "Yes", Value = "true" }, new SelectListItem()
{ Text = "No", Value = "false"} }, "-Select-", new { @class = "form-control" })
                        }
                        @Html.ValidationMessageFor(x => x.ManagementApproval)

                    </div>
                    <div class="col-lg-3 col-md-3 form-group">
                        Peer Review:
                        @if (Model.ID > 0)
                        {
                            @Html.EditorFor(model => model.PeerReview)
                        }
                        else
                        {
                            @Html.DropDownList("PeerReview", new SelectListItem[] { new SelectListItem() { Text = "Yes", Value = "true" }, new SelectListItem()
{ Text = "No", Value = "false"} }, "-Select-", new { @class = "form-control" })
                        }

                        @Html.ValidationMessageFor(x => x.PeerReview)
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Project Name: </div>
                    <div class="col-lg-4 col-md-4 form-group">
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Name)
                    </div>
                    <div class="col-lg-3 col-md-3 form-group">ETO Playbook: </div>
                    <div class="col-lg-3 col-md-3 form-group">
                        @Html.DropDownListFor(x => x.EOPlaybookId, new SelectList(ViewBag.ETOPlaybook, "ID", "Name"), "-Select-", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Start Date: </div>
                    <div class="col-lg-4 col-md-4 form-group">
                        @Html.TextBox("StartDate", Model.ProjectStartDate, new { @class = "form-control" })
                        <label class="field-validation-error" id="StartDateError"></label>
                        <script>
                            $(function () {
                                $('#StartDate').datepicker({ dateFormat: 'mm/dd/yy', changeYear: true });
                            });
                        </script>
                    </div>
                    <div class="col-lg-3 col-md-3 form-group"> </div>
                    <div class="col-lg-3 col-md-3 form-group">

                    </div>
                </div>
                    <div class="col-lg-12 col-md-12">
                        <div class="col-lg-2 col-md-2 form-group">End Date: </div>
                        <div class="col-lg-4 col-md-4 form-group">
                            @Html.TextBox("EndDate", Model.ProjectEndDate, new { @class = "form-control" })
                            <label class="field-validation-error" id="EndDateError"></label>
                            <script>
                                $(function () {
                                    $('#EndDate').datepicker({ dateFormat: 'mm/dd/yy', changeYear: true });
                                });
                            </script>
                        </div>
                        <div class="col-lg-3 col-md-3 form-group"></div>
                        <div class="col-lg-3 col-md-3 form-group">

                        </div>
                    </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Anthem Owner:</div>
                    <div class="col-lg-4 col-md-4 form-group">
                        <div class="wdh-100 clsddlchosen">
                            @Html.DropDownListFor(x => x.ProjectOwnerANTMId, new SelectList(ViewBag.ProjectOwnerNameANTM, "ID", "FullName"), "-Select-", new { @class = "form-control" })
                            <a class="btn btn-primary btn-xs pull-right dd-nodrag btnaddProjectOwnerNameANTM">
                                <img src="@Url.Content("~/Images/add.png")" style="height:30px" title="Add new" />

                            </a>
                            <a class="btn btn-primary btn-xs pull-right dd-nodrag btneditProjectOwnerNameANTM">
                                <img src="@Url.Content("~/Images/edit.png")" style="height:30px" title="Edit" />
                            </a>
                        </div>
                        @Html.ValidationMessageFor(x => x.ProjectOwnerANTMId)
                    </div>
                    <div class="col-lg-3 col-md-3 form-group">Project Co-Owner/ Partner :</div>
                    <div class="col-ld-3 col-md-3 form-group">
                        <div class="wdh-100 clsddlchosen">
                            @Html.DropDownListFor(x => x.ProjectOwnerExternalId, new SelectList(ViewBag.ProjectOwnerNameExternal, "ID", "FullName"), "-Select-", new { @class = "form-control" })
                            <a class="btn btn-primary btn-xs pull-right dd-nodrag btnaddProjectOwnerNameExternal">
                                <img src="@Url.Content("~/Images/add.png")" style="height:30px" title="Add new" />
                            </a>
                            <a class="btn btn-primary btn-xs pull-right dd-nodrag btneditProjectOwnerNameExternal">
                                <img src="@Url.Content("~/Images/edit.png")" style="height:30px" title="Edit" />
                            </a>
                        </div>
                        @Html.ValidationMessageFor(x => x.ProjectOwnerExternalId)
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Project Description and Business Value:</div>
                    <div class="col-lg-10 col-md-10 form-group">
                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control ckeditor" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Executive Summary:</div>
                    <div class="col-lg-10 col-md-10 form-group">
                        @Html.TextAreaFor(x => x.ExecutiveStatus, new { @class = "form-control ckeditor" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Funding Ask:</div>
                    <div class="col-lg-10 col-md-10 form-group">
                        @Html.TextAreaFor(x => x.FundingAsk, new { @class = "form-control ckeditor" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-3 form-group">Accomplishments:</div>
                    <div class="col-lg-10 col-md-10 form-group">
                        @Html.TextAreaFor(x => x.Accomplishments, new { @class = "form-control ckeditor" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Key Risks and Business:</div>
                    <div class="col-lg-10 col-md-10 form-group">
                        @Html.TextAreaFor(x => x.KeyRisksAndIssues, new { @class = "form-control ckeditor" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-2 col-md-2 form-group">Direction Needed:</div>
                    <div class="col-lg-10 col-md-10 form-group">
                        @Html.TextAreaFor(x => x.Direction, new { @class = "form-control ckeditor" })
                    </div>
                </div>
                <div class="col-lg-12 col-md-12">
                    <div class="col-lg-6 col-md-6 col-md-offset-2 form-group">
                        <input id="btn-save-project" class="btn btn-primary" type="submit" onclick="return checkDatevalidations()" value="Submit" />
                        <a class="btn btn-primary" href="@Url.Action("index","project")" style="color:white">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
     </div> </div>
}
<script>
    function checkDatevalidations() {
        if ($('#StartDate').val() == '') {
            $('#EndDateError').html('')
            $('#StartDateError').html('Please select Start Date of Project.').css('color', 'red').css('font-weight', '100')
            return false
        }
        else if ($('#EndDate').val() == '') {
            $('#StartDateError').html('')
            $('#EndDateError').html('Please select End Date of Project.').css('color', 'red').css('font-weight', '100')
            return false
        }
        else {
            $('#StartDateError').html('')
            $('#EndDateError').html('')
            return true
        }
    }

    $(document).ready(function () {
        ETOPlaybookDropdown();
        $("#EOPlaybook").change(function () {
            ETOPlaybookDropdown();
        });

        $('.ckeditor').ckeditor();


        $('#btn-save-project').click(function () {
            if ($("#PeerReview").val() == "") {
                alert("Please select Peer Review");
                return false;
            }
            if ($("#ManagementApproval").val() == "") {
                alert("Please select Management Approval");
                return false;
            }

        });
        $(".modal-content").css({"width": "100%"});
    });

    function ETOPlaybookDropdown() {
        var selectedText = $("#EOPlaybook").find("option:selected").text().toLowerCase();
        if (selectedText == "no") {
            $("#EOPlaybookId")[0].selectedIndex = 0;
            $("#EOPlaybookId").attr("disabled", true);
        }
        else {
            $("#EOPlaybookId").attr("disabled", false);
        }
        //if (selectedText == "yes") {
        //    $("#EOPlaybookId").attr("disabled", false);
        //}
        //else {
        //    $("#EOPlaybookId")[0].selectedIndex = 0;
        //    $("#EOPlaybookId").attr("disabled", true);
        //}
    }
</script>